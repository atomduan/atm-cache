echo $atm_n "checking for $atm_feature ...$atm_c"

cat << END >> $ATM_AUTOCONF_ERR

----------------------------------------
checking for $atm_feature

END

atm_found=no

if test -n "$atm_feature_name"; then
    atm_have_feature=`echo $atm_feature_name \
                   | tr abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWXYZ`
fi

if test -n "$atm_feature_path"; then
    for atm_temp in $atm_feature_path; do
        atm_feature_inc_path="$atm_feature_inc_path -I $atm_temp"
    done
fi

cat << END > $ATM_AUTOTEST.c

#include <sys/types.h>
$ATM_INCLUDE_UNISTD_H
$atm_feature_incs

int main(void) {
    $atm_feature_test;
    return 0;
}

END


atm_test="$CC $CC_TEST_FLAGS $CC_AUX_FLAGS $atm_feature_inc_path \
          -o $ATM_AUTOTEST $ATM_AUTOTEST.c $ATM_TEST_LD_OPT $atm_feature_libs"

atm_feature_inc_path=

eval "/bin/sh -c \"$atm_test\" >> $ATM_AUTOCONF_ERR 2>&1"


if [ -x $ATM_AUTOTEST ]; then

    case "$atm_feature_run" in

        yes)
            # /bin/sh is used to intercept "Killed" or "Abort trap" messages
            if /bin/sh -c $ATM_AUTOTEST >> $ATM_AUTOCONF_ERR 2>&1; then
                echo " found"
                atm_found=yes

                if test -n "$atm_feature_name"; then
                    have=$atm_have_feature . auto/have
                fi

            else
                echo " found but is not working"
            fi
        ;;

        value)
            # /bin/sh is used to intercept "Killed" or "Abort trap" messages
            if /bin/sh -c $ATM_AUTOTEST >> $ATM_AUTOCONF_ERR 2>&1; then
                echo " found"
                atm_found=yes

                cat << END >> $ATM_AUTO_CONFIG_H

#ifndef $atm_feature_name
#define $atm_feature_name  `$ATM_AUTOTEST`
#endif

END
            else
                echo " found but is not working"
            fi
        ;;

        bug)
            # /bin/sh is used to intercept "Killed" or "Abort trap" messages
            if /bin/sh -c $ATM_AUTOTEST >> $ATM_AUTOCONF_ERR 2>&1; then
                echo " not found"

            else
                echo " found"
                atm_found=yes

                if test -n "$atm_feature_name"; then
                    have=$atm_have_feature . auto/have
                fi
            fi
        ;;

        *)
            echo " found"
            atm_found=yes

            if test -n "$atm_feature_name"; then
                have=$atm_have_feature . auto/have
            fi
        ;;

    esac

else
    echo " not found"

    echo "----------"    >> $ATM_AUTOCONF_ERR
    cat $ATM_AUTOTEST.c  >> $ATM_AUTOCONF_ERR
    echo "----------"    >> $ATM_AUTOCONF_ERR
    echo $atm_test       >> $ATM_AUTOCONF_ERR
    echo "----------"    >> $ATM_AUTOCONF_ERR
fi

rm -rf $ATM_AUTOTEST*
