################################## NETWORK #####################################

# bind 192.168.1.100 10.0.0.1
# bind 127.0.0.1 ::1
#
bind 127.0.0.1

# Accept connections on the specified port, default is 8088.
# If port 0 is specified server will not listen on a TCP socket.
port 8088

# TCP listen() backlog.
#
# In high requests-per-second environments you need an high backlog in order
# to avoid slow clients connections issues. Note that the Linux kernel
# will silently truncate it to the value of /proc/sys/net/core/somaxconn so
# make sure to raise both the value of somaxconn and tcp_max_syn_backlog
# in order to get the desired effect.
tcpbacklog 511

# Unix socket.
#
# Specify the path for the Unix socket that will be used to listen for
# incoming connections. There is no default, so server will not listen
# on a unix socket when not specified.
#
# unixsocket /tmp/atmc.sock
# unixsocketperm 700

# Close the connection after a client is idle for N seconds (0 to disable)
timeout 0

# TCP keepalive.
#
# If non-zero, use SO_KEEPALIVE to send TCP ACKs to clients in absence
# of communication. This is useful for two reasons:
#
# 1) Detect dead peers.
# 2) Take the connection alive from the point of view of network
#    equipment in the middle.
#
# On Linux, the specified value (in seconds) is the period used to send ACKs.
# Note that to close the connection the double of the time is needed.
# On other kernels the period depends on the kernel configuration.
#
# A reasonable value for this option is 300 seconds
tcpkeepalive 300

# Set the max number of connected clients at the same time. By default
# this limit is set to 10000 clients, however if the server is not
# able to configure the process file limit to allow for the specified limit
# the max number of allowed clients is set to the current file limit
# minus 32 (as server reserves a few file descriptors for internal uses).
#
# Once the limit is reached server will close all the new connections sending
# an error 'max number of clients reached'.
#
maxclients 10000

################################# GENERAL #####################################

# By default server does not run as a daemon. Use 'yes' if you need it.
# Note that server will write a pid file in /var/run/atmc.pid when daemonized.
daemonize no

# If a pid file is specified, Redis writes it where specified at startup
# and removes it at exit.
#
# When the server runs non daemonized, no pid file is created if none is
# specified in the configuration. When the server is daemonized, the pid file
# is used even if not specified, defaulting to "/var/run/atmc.pid".

# pidfile /var/run/atmc.pid

# Specify the server verbosity level.
# off all debug info warn error fatal
loglevel info

# Specify the log file name. Also the empty string can be used to force
# server to log on the standard output. Note that if you use standard
# output for logging but daemonize, logs will be sent to /dev/null
logfile access.log

############################## MEMORY MANAGEMENT ################################

# In short... if you have slaves attached it is suggested that you set a lower
# limit for maxmemory so that there is some free RAM on the system for slave
# output buffers (but this is not needed if the policy is 'noeviction').
#
maxmemory 1Gb

############################## TASK MANAGEMENT ################################
# The initial number of worker threads 
workernum 10
